/**
 * Copyright (c) 2013 Contributors - see below
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Aziz Nanthaamornphong
 */
package edu.ua.front;

import edu.ua.util.GlobalErrorException;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

public class FrontUI extends javax.swing.JFrame {

    /**
     * Creates new form FrontUI
     */
    SimpleAttributeSet BOLD_BLACK = new SimpleAttributeSet();
    public FrontUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        addFileButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        label2 = new java.awt.Label();
        outputText = new javax.swing.JTextField();
        outputFileButton = new javax.swing.JButton();
        generateButton = new javax.swing.JButton();
        removeFileButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        executeUMLButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        statusBox = new javax.swing.JTextPane();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addFileButton.setBackground(new java.awt.Color(204, 204, 204));
        addFileButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        addFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/1380762678_001_01.png"))); // NOI18N
        addFileButton.setText("Add");
        addFileButton.setToolTipText("Add source code (s)");
        addFileButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addFileButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(fileList);

        label2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        label2.setForeground(new java.awt.Color(51, 51, 51));
        label2.setText("Output File (.xmi):");

        outputFileButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        outputFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/1380763165_001_52.gif"))); // NOI18N
        outputFileButton.setText("Save as");
        outputFileButton.setToolTipText("Specifiy an output file (.xmi)");
        outputFileButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        outputFileButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        outputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileButtonActionPerformed(evt);
            }
        });

        generateButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        generateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/Gear.png"))); // NOI18N
        generateButton.setText("Generate");
        generateButton.setToolTipText("Generae the output file");
        generateButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        generateButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        removeFileButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        removeFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/1380762803_001_05.png"))); // NOI18N
        removeFileButton.setText("Remove");
        removeFileButton.setToolTipText("Remove selected file(s)");
        removeFileButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeFileButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        removeFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFileButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Status/Log:");

        executeUMLButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        executeUMLButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/1380763299_001_37.gif"))); // NOI18N
        executeUMLButton.setText("View");
        executeUMLButton.setToolTipText("Open ArgoUML");
        executeUMLButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        executeUMLButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        executeUMLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeUMLButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/1hqic.png"))); // NOI18N
        jLabel2.setText("File(s):");
        jLabel2.setPreferredSize(new java.awt.Dimension(47, 20));

        resetButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/1380762935_001_39.png"))); // NOI18N
        resetButton.setText("Reset");
        resetButton.setToolTipText("Clear all files");
        resetButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        statusBox.setBackground(new java.awt.Color(204, 204, 204));
        statusBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane3.setViewportView(statusBox);

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 255));
        jMenuBar1.setForeground(new java.awt.Color(51, 51, 255));

        jMenu1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ua/front/gear-logo.png"))); // NOI18N
        jMenu1.setText("ForUML");
        jMenu1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N

        aboutMenuItem.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        aboutMenuItem.setText("About ForUML");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(aboutMenuItem);

        quitMenuItem.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        quitMenuItem.setText("Quit ForUML");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(quitMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 890, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(23, 23, 23)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 840, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(label2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(1, 1, 1)
                                .add(outputText)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(outputFileButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(addFileButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .add(removeFileButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .add(resetButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .add(generateButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .add(executeUMLButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)))
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 957, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(addFileButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeFileButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(resetButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(generateButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(executeUMLButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(outputFileButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(outputText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(label2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setMultiSelectionEnabled(true);
        FileFilter f90Filter = new ExtensionFileFilter(null, new String[]{"F90"});
        fc.addChoosableFileFilter(f90Filter);
        int returnVal = fc.showOpenDialog(this);
        DefaultListModel listModel = new DefaultListModel();
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fc.getSelectedFiles();
            System.out.println("Total Files::"+files.length);
            for (int i = 0; i < files.length; i++) {
                listModel.addElement(files[i].getAbsolutePath());
            }
            this.fileList.setModel(listModel);
        }
    }//GEN-LAST:event_addFileButtonActionPerformed

    private void outputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileButtonActionPerformed

        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.setSelectedFile(new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "output.xmi"));
      
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            this.outputText.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_outputFileButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
      

      try {
            String output = this.outputText.getText();
            if (output.equals("")) {
                JOptionPane.showMessageDialog(this, "Please specify the generated file name", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            File f = new File(output);
            if (f.exists()) {
                int response = JOptionPane.showConfirmDialog(null, "Do you want to replace an existing file?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (response == JOptionPane.NO_OPTION) {
                    return;
                } else if (response == JOptionPane.YES_OPTION) {
                    ParserProcessor front = new ParserProcessor();
                    ListModel listModel = this.fileList.getModel();
                    int size = listModel.getSize();
                    if (size == 0) {
                        JOptionPane.showMessageDialog(this, "Please specify the input(s)", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    String[] files = new String[size + 1];
                    //   files[0] = "--verbose";
                    files[0] = "--silent";
                    for (int i = 0; i < size; i++) {
                        files[i + 1] = listModel.getElementAt(i).toString();
                    }
                    //front.process(files, output, this.statusTextArea, statusBox);
                    front.process(files, output, statusBox);
                }
            } else {
                ParserProcessor front = new ParserProcessor();
                ListModel listModel = this.fileList.getModel();
                int size = listModel.getSize();
                         
                if (size == 0) {
                    JOptionPane.showMessageDialog(this, "Please specify the input(s)", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                String[] files = new String[size + 1];
                // files[0] = "--verbose";
                files[0] = "--silent";
                for (int i = 0; i < size; i++) {
                    files[i + 1] = listModel.getElementAt(i).toString();
                }
                 front.process(files, output, statusBox);
            }
           String dialogMsg = "";
           int choice = 0;
           if(GlobalErrorException.hasError()){
               dialogMsg = "The XMI document is generated with the warning. Do you want to view the UML?";
                choice = JOptionPane.showConfirmDialog(this, dialogMsg, "ForUML", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
           }else{
               dialogMsg = "The XMI document is completely generated. Do you want to view the UML?";
                choice = JOptionPane.showConfirmDialog(this, dialogMsg, "ForUML", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
           }
          
           if(choice == JOptionPane.YES_OPTION){
               executeArgoUML();
           }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,GlobalErrorException.getError(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();           
        }
      
    }//GEN-LAST:event_generateButtonActionPerformed

    private void removeFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFileButtonActionPerformed
 
        int[] i = this.fileList.getSelectedIndices();
        Object[] obj = this.fileList.getSelectedValues();
        
        DefaultListModel list = (DefaultListModel) this.fileList.getModel();
        for(int j=0; j<i.length;j++){
            list.removeElement(obj[j]);
        }     
    }//GEN-LAST:event_removeFileButtonActionPerformed

    private void executeUMLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeUMLButtonActionPerformed
        executeArgoUML();
     
    }//GEN-LAST:event_executeUMLButtonActionPerformed

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        System.exit(1);
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        About about = new About();
        about.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        this.fileList.setModel(new DefaultListModel());
        this.outputText.setText("");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void executeArgoUML() {
       StyleConstants.setBold(BOLD_BLACK, true); 
       try{
          statusBox.getDocument().insertString(statusBox.getDocument().getLength(), "Launching ArgoUML"+System.getProperty("line.separator"), BOLD_BLACK);
        }catch(Exception ex){}
        org.argouml.application.Main main = new org.argouml.application.Main();
        String params[] = new String[2];
        params[0] = "-open";
        //params[1] = "/Users/aziznanthaamornphong/Documents/tmp/test101.xmi";
        params[1] = this.outputText.getText();
        main.runByForUML(params);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      System.setProperty("apple.laf.useScreenMenuBar", "true");
      System.setProperty("com.apple.mrj.application.apple.menu.about.name", "WikiTeX");
    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    } catch (ClassNotFoundException ex) {
      Logger.getLogger(FrontUI.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      Logger.getLogger(FrontUI.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      Logger.getLogger(FrontUI.class.getName()).log(Level.SEVERE, null, ex);
    } catch (UnsupportedLookAndFeelException ex) {
      Logger.getLogger(FrontUI.class.getName()).log(Level.SEVERE, null, ex);
    }
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrontUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrontUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrontUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrontUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addFileButton;
    private javax.swing.JButton executeUMLButton;
    private javax.swing.JList fileList;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.Label label2;
    private javax.swing.JButton outputFileButton;
    private javax.swing.JTextField outputText;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JButton removeFileButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextPane statusBox;
    // End of variables declaration//GEN-END:variables
}
